{ "распределение": "Равномерное распределение на отрезке [0, theta]",

"задача1": "найти точечную оценку параметра theta методом максимального правдоподобия",

"задача2": "построить доверительнвй интервал уровня доверия alpha = 0.95",
"x": [
    0.0335,
    0.059,
    0.112,
    0.2456,
    0.1256,
    0.0524,
    0.244,
    0.4839,
    0.4993,
    0.2864,
    0.0726,
    0.4075,
    0.3127,
    0.0363,
    0.2509,
    0.4845,
    0.3033,
    0.483,
    0.3613,
    0.0644,
    0.2705,
    0.2513,
    0.3656,
    0.2151,
    0.2029,
    0.2075,
    0.2817,
    0.0374,
    0.1203,
    0.1037,
    0.0006,
    0.1349,
    0.126,
    0.3914,
    0.2185,
    0.299,
    0.4588,
    0.0516,
    0.2007,
    0.1404,
    0.4772,
    0.1247,
    0.234,
    0.3973,
    0.2929,
    0.1477,
    0.1944,
    0.2008,
    0.451,
    0.1718
]
}

import numpy as np
import scipy.stats as stats
# Задача 1: Найти точечную оценку параметра theta методом максимального правдоподобия

data = np.array([
    0.0335,  0.059,  0.112,  0.2456, 0.1256,  0.0524,  0.244,
    0.4839,  0.4993, 0.2864,  0.0726, 0.4075,  0.3127, 0.0363,
    0.2509,  0.4845, 0.3033,  0.483,  0.3613, 0.0644, 0.2705,
    0.2513, 0.3656, 0.2151, 0.2029, 0.2075, 0.2817, 0.0374,
    0.1203, 0.1037, 0.0006, 0.1349, 0.126,  0.3914, 0.2185,
    0.299,  0.4588, 0.0516, 0.2007, 0.1404, 0.4772, 0.1247,
    0.234,  0.3973, 0.2929, 0.1477, 0.1944, 0.2008, 0.451,
    0.1718
])

# Вычисление оценки максимального правдоподобия (MLE) теты
theta_hat = max(data)
print("Точечная оценка параметра теты:", theta_hat)

# построить доверительнвй интервал уровня доверия alpha = 0.95
n = len(data)
alpha = 0.05

# Найти доверительный интервал
T1 = theta_hat
T2 = theta_hat * (alpha ** (-1/n))

print(f"Доверительный интервал {100*(1-alpha):.0f}% для теты равен: [{T1:.4f}, {T2:.4f}]")
