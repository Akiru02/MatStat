Variant 18: "Задача": "С помощью критерия Пирсона (хи-квадрат), проверить гипотезу, что случайная выборка, имеет экспоненциальное распределение с параметром lambda = 2.17. 
Взять равномерную сетку из 10 интервалов и уровень значимости epsilon = 0.05.", "lambda": 2.17, 
"x": 
[ 0.17, 0.29, 0.86, 0.12, 3.06, 0.12, 0.41, 0.11, 0.71, 0.72, 
1.01, 0.27, 0.11, 2.65, 0.16, 0.64, 0.26, 0.77, 0.01, 0.62, 
0.13, 0.45, 1.11, 1.28, 0.63, 0.11, 0.45, 0.26, 1.45, 0.04, 
0.08, 0.61, 0.52, 0.25, 0.02, 1.14, 1.38, 0.48, 0.3, 0.02, 
0.1, 0.65, 0.3, 0.27, 0.03, 0.01, 0.25, 0.46, 0.77, 0.62, 
0.19, 1.36, 1.96, 0.03, 0.04, 0.49, 0.42, 0.5, 0.11, 0.09, 
0.1, 0.75, 0.09, 0.68, 0.45, 0.12, 0.09, 1.58, 0.27, 0.27, 
0.62, 0.65, 0.75, 1.23, 0.36, 0.08, 0.24, 1.02, 0.08, 0.59, 
0.29, 0.54, 0.51, 0.47, 0.36, 0.54, 0.57, 0.01, 0.06, 0.0, 
0.28, 0.1, 0.56, 0.23, 0.45, 0.17, 0.92, 0.29, 0.68, 2.21 ] }

import numpy as np
from scipy.stats import chi2

# Данные
x = [ 0.17, 0.29, 0.86, 0.12, 3.06, 0.12, 0.41, 0.11, 0.71, 0.72,
      1.01, 0.27, 0.11, 2.65, 0.16, 0.64, 0.26, 0.77, 0.01, 0.62,
      0.13, 0.45, 1.11, 1.28, 0.63, 0.11, 0.45, 0.26, 1.45, 0.04,
      0.08, 0.61, 0.52, 0.25, 0.02, 1.14, 1.38, 0.48, 0.3, 0.02,
      0.1, 0.65, 0.3, 0.27, 0.03, 0.01, 0.25, 0.46, 0.77, 0.62,
      0.19, 1.36, 1.96, 0.03, 0.04, 0.49, 0.42, 0.5, 0.11, 0.09,
      0.1, 0.75, 0.09, 0.68, 0.45, 0.12, 0.09, 1.58, 0.27, 0.27,
      0.62, 0.65, 0.75, 1.23, 0.36, 0.08, 0.24, 1.02, 0.08, 0.59,
      0.29, 0.54, 0.51, 0.47, 0.36, 0.54, 0.57, 0.01, 0.06, 0.0,
      0.28, 0.1, 0.56, 0.23, 0.45, 0.17, 0.92, 0.29, 0.68, 2.21 ]

# Параметр распределения экспоненты
lambda_ = 2.17

# Число интервалов
k = 10

# Ширина каждого интервала
width = 0.25

# Нижние границы каждого интервала
lower_bounds = np.arange(0, 2.5 + width, width)

n = len(x)

# Рассчитать вероятность каждого интервала при экспоненциальном распределении
probabilities = np.exp(-lambda_ * lower_bounds) - np.exp(-lambda_ * (lower_bounds + width))

# Вычисление ожидаемых частот
expected_frequencies = n * probabilities

# Вычисление наблюдаемых частот
observed_frequencies = np.zeros(k)
for value in x:
    if value < 2.5:
        interval_index = int(value // width)
        observed_frequencies[interval_index] += 1
    else:
        observed_frequencies[-1] += 1

# Вычисление статистики хи-квадрат
chi_square = np.sum(((observed_frequencies - expected_frequencies[:k]) ** 2) / expected_frequencies[:k])

# Степени свободы
df = k - 1

# Уровень значимости
epsilon = 0.05

# Критическое значение
critical_value = chi2.ppf(1 - epsilon, df)

print(f"Статистика хи-квадрат: {chi_square:.2f}")
print(f"Степени свободы: {df}")
print(f"Уровень значимости: {epsilon}")
print(f"Критическое значение: {critical_value:.2f}")

if chi_square < critical_value:
    print("Не отвергаем нулевую гипотезу.")
    print("Недостаточно доказательств для заключения, что данные значительно отличаются от распределения экспоненты с заданным параметром.")
else:
    print("Отвергаем нулевую гипотезу.")
    print("Данные значительно отличаются от распределения экспоненты с заданным параметром.")
